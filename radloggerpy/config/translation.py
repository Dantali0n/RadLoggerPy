# Copyright (C) 2023 Dantali0n
# SPDX-License-Identifier: Apache-2.0

import gettext
from importlib import resources
import os
import sys
from typing import List

import oslo_i18n

from radloggerpy import __package_folder__ as package_folder


def get_package_locale_dir():
    """Python version agnostic method to fetch 'locale' package dir path"""
    if sys.version_info >= (3, 9):
        return str(resources.files(package_folder) / 'locale')

    with resources.path(package_folder, "locale") as path:
        return str(path)


def translation_languages() -> List[str]:
    """Determine available languages by checking 'radloggerpy/locale' subdirs"""
    languages = []
    locale_dir = get_package_locale_dir()
    files_folders = os.listdir(locale_dir)

    for file_folder in files_folders:
        if os.path.isdir(os.path.join(os.path.abspath(locale_dir), file_folder)):
            languages.append(file_folder)

    return languages


# Currently supported set of languages, autogenerated from locale subdirs
LANGUAGES = translation_languages()


def has_translation_files(localedir: str = None) -> bool:
    """Determine if translation files can be found in localedir for any langauge"""
    return gettext.find(
        package_folder, localedir=localedir, languages=LANGUAGES
    )


def translation_dirs() -> List[str]:
    """Return a list of potential directories to find translation files

    1. Configuration to look in gettext default dir (/usr/share/locale)
    2. Oslo environment variable (RADLOGGERPY_LOCALEDIR)
    3. Package data files (radloggerpy/locale)
    """
    dirs = [
        gettext._default_localedir,
    ]

    env_locale_dir = os.environ.get(
        oslo_i18n._locale.get_locale_dir_variable_name(package_folder)
    )
    if env_locale_dir:
        dirs.append(env_locale_dir)

    dirs.append(get_package_locale_dir())
    return dirs


def list_opts():
    """Required method by opts for oslo-config-generator"""
    return []
