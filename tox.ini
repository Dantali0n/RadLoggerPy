[tox]
minversion = 2.0
envlist = py36,py37,py38,py39,py310,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/yoga} {opts} {packages}
setenv =
   PYTHONWARNINGS=default::DeprecationWarning
deps = -r{toxinidir}/test-requirements.txt
commands = stestr run {posargs}

[testenv:lower-constraints]
; lower-constraints job verifies that minimum versions from requirements results
; in a working package that can run unit tests. Ensure lower-constraints.txt
; versions match requirements.txt and test-requirements.txt
; TODO(Dantali0n): Ensure files are checked for being up to date #14
usedevelop = False
install_command = pip install {opts} {packages}
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:venv]
commands = {posargs}

[testenv:pep8]
commands =
    doc8 doc/source/ README.rst
    flake8 {posargs}
    bandit -r radloggerpy -x tests -n5 -ll # -s B320

[testenv:typecheck]
commands =
    mypy -p radloggerpy --ignore-missing-imports

[testenv:cover]
setenv =
    PYTHON=coverage run --source radloggerpy --parallel-mode
commands =
    coverage erase
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
commands =
    sphinx-build -W -b html doc/source doc/build/html

[testenv:tenv]
deps = {[testenv:docs]deps}
commands = {posargs}

[testenv:releasenotes]
deps = {[testenv:docs]deps}
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:classdiagram]
deps = {[testenv:docs]deps}
commands = pyreverse --ignore=tests -my -k -o png radloggerpy/

[testenv:genconfig]
basepython = python3
sitepackages = False
commands =
    oslo-config-generator --config-file etc/radloggerpy/radloggerpy.conf

[flake8]
show-source = True
ignore = H105,E123,E125,W504
enable-extensions = H106,H203,H204
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[flake8:local-plugins]
extension =
  N319 = checks:no_translate_debug_logs
  N322 = checks:check_assert_called_once_with
  N325 = checks:check_python3_xrange
  N326 = checks:check_no_basestring
  N327 = checks:check_python3_no_iteritems
  N328 = checks:check_assert_true
  N328 = checks:check_assert_false
  N330 = checks:check_assert_empty
  N331 = checks:check_assert_is_instance
  N333 = checks:check_log_warn_deprecated
  N340 = checks:check_oslo_i18n_wrapper
  N341 = checks:check_builtins_gettext
  N342 = checks:no_redundant_import_alias
paths =
  ./radloggerpy/hacking

[hacking]
import_exceptions = radloggerpy._i18n
local-check-factory = radloggerpy.hacking.checks.factory
